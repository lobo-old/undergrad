/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 200.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("CLK_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK_Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("START")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V_COUNT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 29;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("V_COUNT[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

SIGNAL("V_COUNT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "V_COUNT";
}

TRANSITION_LIST("CLK_in")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
	}
}
TRANSITION_LIST("CLK_Out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 57.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 54.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 65.0;
	}
}
TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
	}
}
TRANSITION_LIST("START")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
	}
}
TRANSITION_LIST("V_COUNT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 83.0;
	}
}
TRANSITION_LIST("V_COUNT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 17.0;
	}
}
TRANSITION_LIST("V_COUNT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 5.0;
	}
}
TRANSITION_LIST("V_COUNT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 5.0;
	}
}


DISPLAY_LINE
{
	CHANNEL = "CLK_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "START";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "V_COUNT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "CLK_Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
